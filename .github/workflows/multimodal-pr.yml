name: Multimodal PR
on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]
    paths:
      - "hi-ml-multimodal/**"
      - ".github/workflows/multimodal-pr.yml"

env:
  pythonVersion: 3.7
  folder: hi-ml-multimodal
  HIML_TENANT_ID: ${{ secrets.HIML_TENANT_ID }}
  HIML_RESOURCE_GROUP: ${{ secrets.HIML_RESOURCE_GROUP }}
  HIML_SUBSCRIPTION_ID: ${{ secrets.HIML_SUBSCRIPTION_ID }}
  HIML_WORKSPACE_NAME: ${{ secrets.HIML_WORKSPACE_NAME }}
  HIML_SERVICE_PRINCIPAL_ID: ${{ secrets.HIML_SERVICE_PRINCIPAL_ID }}
  HIML_SERVICE_PRINCIPAL_PASSWORD: ${{ secrets.HIML_SERVICE_PRINCIPAL_PASSWORD }}
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:

  flake8:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Python ${{ env.pythonVersion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.pythonVersion }}

      - name: flake8
        run: |
          cd ${{ env.folder }}
          make pip_test
          make flake8

  mypy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Python ${{ env.pythonVersion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.pythonVersion }}

      - name: mypy
        run: |
          cd ${{ env.folder }}
          make pip
          make mypy

  pytest:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Python ${{ env.pythonVersion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.pythonVersion }}

      - name: Upgrade PIP
        run: |
          cd ${{ env.folder }}
          make pip_upgrade

      - name: Test with pytest
        run: |
          cd ${{ env.folder }}

          # Run tests
          make pip
          make pytest

  notebooks:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Python ${{ env.pythonVersion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.pythonVersion }}

      - name: Install test requirements
        run: |
          cd ${{ env.folder }}
          make pip_test

      - name: Run Jupyter notebooks
        run: |
          cd ${{ env.folder }}
          ipython kernel install --name "python3" --user
          echo "Current branch: ${BRANCH_NAME}"
          papermill --parameters repo_branch ${BRANCH_NAME} notebooks/phrase_grounding.ipynb /tmp/phrase_grounding_output.ipynb
