name: Histopathology PR Workflow
on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]
    paths:
      - "hi-ml-histopathology/**"

env:
  pythonVersion: 3.7
  folder: hi-ml-histopathology
  HIML_TENANT_ID: ${{ secrets.HIML_TENANT_ID }}
  HIML_RESOURCE_GROUP: ${{ secrets.HIML_RESOURCE_GROUP }}
  HIML_SUBSCRIPTION_ID: ${{ secrets.HIML_SUBSCRIPTION_ID }}
  HIML_WORKSPACE_NAME: ${{ secrets.HIML_WORKSPACE_NAME }}
  HIML_SERVICE_PRINCIPAL_ID: ${{ secrets.HIML_SERVICE_PRINCIPAL_ID }}
  HIML_SERVICE_PRINCIPAL_PASSWORD: ${{ secrets.HIML_SERVICE_PRINCIPAL_PASSWORD }}
  HIML_DIST_ARTIFACT_SUFFIX: '-dist'
  HIML_PACKAGE_NAME_ARTIFACT_SUFFIX: '-package_name'
  HIML_VERSION_ARTIFACT_SUFFIX: '-latest_version'

jobs:

  flake8:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set up Python ${{ env.pythonVersion }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.pythonVersion }}

      - name: flake8
        run: |
          cd ${{ env.folder }}
          make pip_test
          make flake8

  mypy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set up Python ${{ env.pythonVersion }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.pythonVersion }}

      - name: mypy
        run: |
          cd ${{ env.folder }}
          make pip_test
          make mypy

  pyright:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: ${{ env.folder }}/environment.yml

      - name: pyright
        shell: bash -l {0}
        run: |
          conda info
          cd ${{ env.folder }}
          make pyright_install
          make pyright

  pytest:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set up Python ${{ env.pythonVersion }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.pythonVersion }}

      - name: Test with pytest
        run: |
          cd ${{ env.folder }}

          # Install local package in editable mode
          make pip_local

          # Run tests
          make pip_test
          make pytest

  test-project-folders:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set up Python ${{ env.pythonVersion }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.pythonVersion }}

      - name: PIP upgrade
        run: |
          cd hi-ml-azure
          make pip_upgrade

      - name: Download hi-ml-azure
        id: download_himlazure
        uses: ./.github/actions/download_package_artifacts
        with:
          folder: hi-ml-azure
          package_type: ${{ matrix.packageName }}

      - name: Download hi-ml
        id: download_himl
        uses: ./.github/actions/download_package_artifacts
        with:
          folder: hi-ml
          package_type: ${{ matrix.packageName }}

      - name: Install dependencies
        run: |
          cd hi-ml-azure
          pip install ${{ steps.download_himlazure.outputs.package_filename }}
          cd ../hi-ml
          pip install ${{ steps.download_himl.outputs.package_filename }}

      - name: Run tests
        run: |
          cd ${{ matrix.folder }}
          make pip_local
          make pytest_and_coverage

      - name: Upload coverage report to Codecov
        if: ${{ matrix.packageName == '*.whl' }}
        uses: codecov/codecov-action@v2
        with:
            name: ${{ matrix.folder }}

      - name: Run GPU tests
        run: |
          branch_prefix="refs/heads/"
          full_branch_name=$GITHUB_REF
          branch_name_without_prefix=${full_branch_name#$branch_prefix}
          python hi-ml-azure/run_pytest.py --mark=gpu --cluster=pr-gpu --conda_env=${{ matrix.folder }}/environment.yml --folder=${{ matrix.folder }} --experiment="$branch_name_without_prefix"
