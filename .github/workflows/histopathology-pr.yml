name: Histopathology PR Workflow
on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]
    paths:
      - "hi-ml-histopathology/**"

env:
  pythonVersion: 3.7
  folder: hi-ml-histopathology
  HIML_TENANT_ID: ${{ secrets.HIML_TENANT_ID }}
  HIML_RESOURCE_GROUP: ${{ secrets.HIML_RESOURCE_GROUP }}
  HIML_SUBSCRIPTION_ID: ${{ secrets.HIML_SUBSCRIPTION_ID }}
  HIML_WORKSPACE_NAME: ${{ secrets.HIML_WORKSPACE_NAME }}
  HIML_SERVICE_PRINCIPAL_ID: ${{ secrets.HIML_SERVICE_PRINCIPAL_ID }}
  HIML_SERVICE_PRINCIPAL_PASSWORD: ${{ secrets.HIML_SERVICE_PRINCIPAL_PASSWORD }}
  HIML_DIST_ARTIFACT_SUFFIX: '-dist'
  HIML_PACKAGE_NAME_ARTIFACT_SUFFIX: '-package_name'
  HIML_VERSION_ARTIFACT_SUFFIX: '-latest_version'

jobs:

  flake8:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set up Python ${{ env.pythonVersion }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.pythonVersion }}

      - name: flake8
        run: |
          cd ${{ env.folder }}
          make pip_test
          make flake8

  mypy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set up Python ${{ env.pythonVersion }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.pythonVersion }}

      - name: mypy
        run: |
          cd ${{ env.folder }}
          make pip_test
          make mypy

  pytest:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set up Python ${{ env.pythonVersion }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.pythonVersion }}

      - name: PIP upgrade
        run: |
          make pip_upgrade

      - name: Install required packages
        run: |
          cd hi-ml-azure
          make pip_from_conda

      - name: Install hi-ml locally
        run: |
          cd hi-ml
          make pip_local

      - name: Install hi-ml-azure locally
        run: |
          cd hi-ml-azure
          make pip_local

      - name: Test with pytest
        run: |
          cd ${{ env.folder }}

          # Run tests
          make pip_test
          make pytest_coverage

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v2
        with:
            name: ${{ env.folder }}

      - name: Run GPU tests
        run: |
          branch_prefix="refs/heads/"
          full_branch_name=$GITHUB_REF
          branch_name_without_prefix=${full_branch_name#$branch_prefix}
          python hi-ml-azure/run_pytest.py --mark=gpu --cluster=pr-gpu --conda_env=${{ matrix.folder }}/environment.yml --folder=${{ matrix.folder }} --experiment="$branch_name_without_prefix"
