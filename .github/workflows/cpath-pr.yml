name: Pathology PR
on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]
    paths:
      - "hi-ml-cpath/**"
      - ".github/workflows/cpath-pr.yml"
      # When the core hi-ml libraries change, test the histo test too, to find problems with backwards compatibility
      - "hi-ml-azure/**"
      - "hi-ml/**"

env:
  pythonVersion: 3.9
  folder: hi-ml-cpath
  module_for_coverage_reporting: health_cpath
  HIML_TENANT_ID: ${{ secrets.HIML_TENANT_ID }}
  HIML_RESOURCE_GROUP: ${{ secrets.HIML_RESOURCE_GROUP }}
  HIML_SUBSCRIPTION_ID: ${{ secrets.HIML_SUBSCRIPTION_ID }}
  HIML_WORKSPACE_NAME: ${{ secrets.HIML_WORKSPACE_NAME }}
  HIML_SERVICE_PRINCIPAL_ID: ${{ secrets.HIML_SERVICE_PRINCIPAL_ID }}
  HIML_SERVICE_PRINCIPAL_PASSWORD: ${{ secrets.HIML_SERVICE_PRINCIPAL_PASSWORD }}

jobs:

  flake8:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Python ${{ env.pythonVersion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.pythonVersion }}

      - name: flake8
        run: |
          cd ${{ env.folder }}
          make pip_test
          make flake8

  mypy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Python ${{ env.pythonVersion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.pythonVersion }}

      - name: mypy
        run: |
          cd ${{ env.folder }}
          make pip_test
          make mypy

  pytest:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Prepare Conda environment
        uses: ./.github/actions/prepare_cpath_environment

      - name: Test with pytest
        run: |
          cd ${{ env.folder }}

          # Run tests
          make pip_test
          make pytest_coverage

      - name: Run GPU tests
        # GPU tests should be run even if other tests fail
        if: always()
        shell: bash -l {0}
        run: |
          branch_prefix="refs/heads/"
          full_branch_name=$GITHUB_REF
          branch_name_without_prefix=${full_branch_name#$branch_prefix}
          python hi-ml-azure/run_pytest.py --mark=gpu --cluster=pr-gpu --conda_env=${{ env.folder }}/environment.yml --folder=${{ env.folder }} --coverage_module=${{ env.module_for_coverage_reporting }} --experiment="$branch_name_without_prefix"

      - name: Upload coverage reports to Codecov
        # Coverage should also be uploaded if tests still fail.
        # This will pick up both the files coverage.xml (from the normal tests) and pytest_gpu_coverage.xml (from the GPU tests).
        if: always()
        uses: codecov/codecov-action@v3
        with:
            flags: ${{ env.folder }}

  smoke_test_slidespandaimagenetmil:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Prepare Conda environment
        uses: ./.github/actions/prepare_cpath_environment

      - name: smoke test
        run: |
          cd ${{ env.folder }}
          make smoke_test_slidespandaimagenetmil_aml

  smoke_test_tilespandaimagenetmil:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Prepare Conda environment
        uses: ./.github/actions/prepare_cpath_environment

      - name: smoke test
        run: |
          cd ${{ env.folder }}
          make smoke_test_tilespandaimagenetmil_aml

  smoke_test_tcgacrcksslmil_aml:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Prepare Conda environment
        uses: ./.github/actions/prepare_cpath_environment

      - name: smoke test
        run: |
          cd ${{ env.folder }}
          make smoke_test_tcgacrcksslmil_aml

  smoke_test_crck_simclr_aml:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Prepare Conda environment
        uses: ./.github/actions/prepare_cpath_environment

      - name: smoke test
        run: |
          cd ${{ env.folder }}
          make smoke_test_crck_simclr_aml

  publish:
    runs-on: ubuntu-20.04
    needs: [
      flake8,
      mypy,
      pytest,
      smoke_test_slidespandaimagenetmil,
      smoke_test_tilespandaimagenetmil,
      smoke_test_crck_simclr_aml
      ]
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Python ${{ env.pythonVersion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.pythonVersion }}

      - name: Install build tools
        run: make pip_build

      - name: Build a binary wheel and a source tarball
        run: |
          cd ${{ env.folder }}
          make build

      - name: Test the binary wheel
        run: |
          cd ${{ env.folder }}
          make test_wheel

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_API_TOKEN }}
          packages_dir: ${{ env.folder }}/dist/
          repository_url: https://test.pypi.org/legacy/
          verbose: true
          skip_existing: true

      - name: Publish package to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: ${{ env.folder }}/dist/
          verbose: true
